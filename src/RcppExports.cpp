// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// PowerMat
arma::mat PowerMat(arma::mat tempMat, double power);
RcppExport SEXP _simesHotelling_PowerMat(SEXP tempMatSEXP, SEXP powerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type tempMat(tempMatSEXP);
    Rcpp::traits::input_parameter< double >::type power(powerSEXP);
    rcpp_result_gen = Rcpp::wrap(PowerMat(tempMat, power));
    return rcpp_result_gen;
END_RCPP
}
// colMeanRcpp
NumericVector colMeanRcpp(NumericMatrix X);
RcppExport SEXP _simesHotelling_colMeanRcpp(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(colMeanRcpp(X));
    return rcpp_result_gen;
END_RCPP
}
// CovFind
arma::mat CovFind(NumericMatrix X);
RcppExport SEXP _simesHotelling_CovFind(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(CovFind(X));
    return rcpp_result_gen;
END_RCPP
}
// MahalanobisArma
double MahalanobisArma(arma::vec x, arma::vec center, arma::mat cov);
RcppExport SEXP _simesHotelling_MahalanobisArma(SEXP xSEXP, SEXP centerSEXP, SEXP covSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    rcpp_result_gen = Rcpp::wrap(MahalanobisArma(x, center, cov));
    return rcpp_result_gen;
END_RCPP
}
// RandomHoteling
NumericVector RandomHoteling(arma::vec x, arma::vec center, arma::mat cov, const int n, int samp_size);
RcppExport SEXP _simesHotelling_RandomHoteling(SEXP xSEXP, SEXP centerSEXP, SEXP covSEXP, SEXP nSEXP, SEXP samp_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type samp_size(samp_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(RandomHoteling(x, center, cov, n, samp_size));
    return rcpp_result_gen;
END_RCPP
}
// IndHoteling
NumericVector IndHoteling(arma::vec x, arma::vec center, arma::mat cov, IntegerMatrix samp_mat);
RcppExport SEXP _simesHotelling_IndHoteling(SEXP xSEXP, SEXP centerSEXP, SEXP covSEXP, SEXP samp_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type samp_mat(samp_matSEXP);
    rcpp_result_gen = Rcpp::wrap(IndHoteling(x, center, cov, samp_mat));
    return rcpp_result_gen;
END_RCPP
}
// CombineVectors
arma::uvec CombineVectors(arma::uvec vec_1, int num);
RcppExport SEXP _simesHotelling_CombineVectors(SEXP vec_1SEXP, SEXP numSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type vec_1(vec_1SEXP);
    Rcpp::traits::input_parameter< int >::type num(numSEXP);
    rcpp_result_gen = Rcpp::wrap(CombineVectors(vec_1, num));
    return rcpp_result_gen;
END_RCPP
}
// HotelingFind
NumericVector HotelingFind(arma::uvec selected, arma::uvec not_select, arma::vec x, arma::vec center, arma::mat cov);
RcppExport SEXP _simesHotelling_HotelingFind(SEXP selectedSEXP, SEXP not_selectSEXP, SEXP xSEXP, SEXP centerSEXP, SEXP covSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type selected(selectedSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_select(not_selectSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    rcpp_result_gen = Rcpp::wrap(HotelingFind(selected, not_select, x, center, cov));
    return rcpp_result_gen;
END_RCPP
}
// CreateSol
NumericVector CreateSol(arma::vec x, arma::vec center, arma::mat cov, IntegerVector group_vector);
RcppExport SEXP _simesHotelling_CreateSol(SEXP xSEXP, SEXP centerSEXP, SEXP covSEXP, SEXP group_vectorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type group_vector(group_vectorSEXP);
    rcpp_result_gen = Rcpp::wrap(CreateSol(x, center, cov, group_vector));
    return rcpp_result_gen;
END_RCPP
}
// Permute
List Permute(NumericMatrix X, NumericMatrix Y);
RcppExport SEXP _simesHotelling_Permute(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(Permute(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// RandomClusterSH
NumericMatrix RandomClusterSH(arma::vec x, arma::vec center, arma::mat cov, IntegerVector group_vector, IntegerVector size_vec, int obs);
RcppExport SEXP _simesHotelling_RandomClusterSH(SEXP xSEXP, SEXP centerSEXP, SEXP covSEXP, SEXP group_vectorSEXP, SEXP size_vecSEXP, SEXP obsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type group_vector(group_vectorSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type size_vec(size_vecSEXP);
    Rcpp::traits::input_parameter< int >::type obs(obsSEXP);
    rcpp_result_gen = Rcpp::wrap(RandomClusterSH(x, center, cov, group_vector, size_vec, obs));
    return rcpp_result_gen;
END_RCPP
}
// pMatMaker
NumericMatrix pMatMaker(NumericMatrix statMat);
RcppExport SEXP _simesHotelling_pMatMaker(SEXP statMatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type statMat(statMatSEXP);
    rcpp_result_gen = Rcpp::wrap(pMatMaker(statMat));
    return rcpp_result_gen;
END_RCPP
}
// dist2
double dist2(NumericVector v1, NumericVector v2);
RcppExport SEXP _simesHotelling_dist2(SEXP v1SEXP, SEXP v2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v2(v2SEXP);
    rcpp_result_gen = Rcpp::wrap(dist2(v1, v2));
    return rcpp_result_gen;
END_RCPP
}
// FastNIPS
NumericMatrix FastNIPS(NumericMatrix XY, IntegerVector Ind, bool maxFlag);
RcppExport SEXP _simesHotelling_FastNIPS(SEXP XYSEXP, SEXP IndSEXP, SEXP maxFlagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type XY(XYSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Ind(IndSEXP);
    Rcpp::traits::input_parameter< bool >::type maxFlag(maxFlagSEXP);
    rcpp_result_gen = Rcpp::wrap(FastNIPS(XY, Ind, maxFlag));
    return rcpp_result_gen;
END_RCPP
}
// FreedomDegreeFind
double FreedomDegreeFind(arma::mat covX, arma::mat covY, double nX, double nY);
RcppExport SEXP _simesHotelling_FreedomDegreeFind(SEXP covXSEXP, SEXP covYSEXP, SEXP nXSEXP, SEXP nYSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type covX(covXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type covY(covYSEXP);
    Rcpp::traits::input_parameter< double >::type nX(nXSEXP);
    Rcpp::traits::input_parameter< double >::type nY(nYSEXP);
    rcpp_result_gen = Rcpp::wrap(FreedomDegreeFind(covX, covY, nX, nY));
    return rcpp_result_gen;
END_RCPP
}
// HotelingCalc
double HotelingCalc(NumericMatrix X, NumericMatrix Y, arma::vec center);
RcppExport SEXP _simesHotelling_HotelingCalc(SEXP XSEXP, SEXP YSEXP, SEXP centerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    rcpp_result_gen = Rcpp::wrap(HotelingCalc(X, Y, center));
    return rcpp_result_gen;
END_RCPP
}
// HotelingNonEqual
NumericMatrix HotelingNonEqual(NumericMatrix X, NumericMatrix Y, IntegerMatrix samp_mat, arma::vec center);
RcppExport SEXP _simesHotelling_HotelingNonEqual(SEXP XSEXP, SEXP YSEXP, SEXP samp_matSEXP, SEXP centerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type samp_mat(samp_matSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    rcpp_result_gen = Rcpp::wrap(HotelingNonEqual(X, Y, samp_mat, center));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _simesHotelling_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _simesHotelling_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _simesHotelling_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _simesHotelling_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_simesHotelling_PowerMat", (DL_FUNC) &_simesHotelling_PowerMat, 2},
    {"_simesHotelling_colMeanRcpp", (DL_FUNC) &_simesHotelling_colMeanRcpp, 1},
    {"_simesHotelling_CovFind", (DL_FUNC) &_simesHotelling_CovFind, 1},
    {"_simesHotelling_MahalanobisArma", (DL_FUNC) &_simesHotelling_MahalanobisArma, 3},
    {"_simesHotelling_RandomHoteling", (DL_FUNC) &_simesHotelling_RandomHoteling, 5},
    {"_simesHotelling_IndHoteling", (DL_FUNC) &_simesHotelling_IndHoteling, 4},
    {"_simesHotelling_CombineVectors", (DL_FUNC) &_simesHotelling_CombineVectors, 2},
    {"_simesHotelling_HotelingFind", (DL_FUNC) &_simesHotelling_HotelingFind, 5},
    {"_simesHotelling_CreateSol", (DL_FUNC) &_simesHotelling_CreateSol, 4},
    {"_simesHotelling_Permute", (DL_FUNC) &_simesHotelling_Permute, 2},
    {"_simesHotelling_RandomClusterSH", (DL_FUNC) &_simesHotelling_RandomClusterSH, 6},
    {"_simesHotelling_pMatMaker", (DL_FUNC) &_simesHotelling_pMatMaker, 1},
    {"_simesHotelling_dist2", (DL_FUNC) &_simesHotelling_dist2, 2},
    {"_simesHotelling_FastNIPS", (DL_FUNC) &_simesHotelling_FastNIPS, 3},
    {"_simesHotelling_FreedomDegreeFind", (DL_FUNC) &_simesHotelling_FreedomDegreeFind, 4},
    {"_simesHotelling_HotelingCalc", (DL_FUNC) &_simesHotelling_HotelingCalc, 3},
    {"_simesHotelling_HotelingNonEqual", (DL_FUNC) &_simesHotelling_HotelingNonEqual, 4},
    {"_simesHotelling_rcpparma_hello_world", (DL_FUNC) &_simesHotelling_rcpparma_hello_world, 0},
    {"_simesHotelling_rcpparma_outerproduct", (DL_FUNC) &_simesHotelling_rcpparma_outerproduct, 1},
    {"_simesHotelling_rcpparma_innerproduct", (DL_FUNC) &_simesHotelling_rcpparma_innerproduct, 1},
    {"_simesHotelling_rcpparma_bothproducts", (DL_FUNC) &_simesHotelling_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_simesHotelling(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
